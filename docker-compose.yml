services:
  # Development service (using cloud MongoDB)
  app-dev:
    container_name: nestjs-app-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env.development
    environment:
      - NODE_ENV=development
    ports:
      - '3000:3000'
      - '9229:9229' # Debug port
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - app-network
    profiles:
      - dev
    restart: unless-stopped

  # Production service (using cloud MongoDB)
  app-prod:
    container_name: nestjs-app-prod
    build:
      context: .
      dockerfile: Dockerfile.prod
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    ports:
      - '8080:3000'
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - app-network
    profiles:
      - prod
    restart: unless-stopped

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: nestjs-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - app-prod
    networks:
      - app-network
    profiles:
      - prod

volumes:
  mongo_data:
    driver: local

networks:
  app-network:
    driver: bridge